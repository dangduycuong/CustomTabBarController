//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var image: image { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.image` struct is generated, and contains static references to 13 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `action`.
    var action: RswiftResources.ImageResource { .init(name: "action", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `action-selected`.
    var actionSelected: RswiftResources.ImageResource { .init(name: "action-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `add`.
    var add: RswiftResources.ImageResource { .init(name: "add", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `check`.
    var check: RswiftResources.ImageResource { .init(name: "check", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `fourth`.
    var fourth: RswiftResources.ImageResource { .init(name: "fourth", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `fourth-selected`.
    var fourthSelected: RswiftResources.ImageResource { .init(name: "fourth-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `home`.
    var home: RswiftResources.ImageResource { .init(name: "home", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `home-selected`.
    var homeSelected: RswiftResources.ImageResource { .init(name: "home-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `previous`.
    var previous: RswiftResources.ImageResource { .init(name: "previous", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `second`.
    var second: RswiftResources.ImageResource { .init(name: "second", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `second-selected`.
    var secondSelected: RswiftResources.ImageResource { .init(name: "second-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `third`.
    var third: RswiftResources.ImageResource { .init(name: "third", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `third-selected`.
    var thirdSelected: RswiftResources.ImageResource { .init(name: "third-selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 2 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `TodoTableViewCell`.
    var todoTableViewCell: RswiftResources.NibReference<TodoTableViewCell> { .init(name: "TodoTableViewCell", bundle: bundle) }

    /// Nib `WeatherTableViewCell`.
    var weatherTableViewCell: RswiftResources.NibReference<WeatherTableViewCell> { .init(name: "WeatherTableViewCell", bundle: bundle) }

    func validate() throws {

    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UINavigationController

      let bundle: Foundation.Bundle

      let name = "Main"

      var actionViewController: RswiftResources.StoryboardViewControllerIdentifier<ActionViewController> { .init(identifier: "ActionViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "home", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'home' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "third-selected", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'third-selected' is used in storyboard 'Main', but couldn't be loaded.") }
        if actionViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'actionViewController' could not be loaded from storyboard 'Main' as 'ActionViewController'.") }
      }
    }
  }
}